{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/prismjs/components/prism-core.js","../../node_modules/prismjs/components/prism-markup.js","../../node_modules/prismjs/dependencies.js","../../src/actions/components.js","../../src/actions/svelte-prism-action.js","../../src/components/Page.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction first_enabled_option(select) {\n    for (const option of select.options) {\n        if (!option.disabled) {\n            return option;\n        }\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || first_enabled_option(select);\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.56.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","Prism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n","'use strict';\n\n/**\n * @typedef {Object<string, ComponentCategory>} Components\n * @typedef {Object<string, ComponentEntry | string>} ComponentCategory\n *\n * @typedef ComponentEntry\n * @property {string} [title] The title of the component.\n * @property {string} [owner] The GitHub user name of the owner.\n * @property {boolean} [noCSS=false] Whether the component doesn't have style sheets which should also be loaded.\n * @property {string | string[]} [alias] An optional list of aliases for the id of the component.\n * @property {Object<string, string>} [aliasTitles] An optional map from an alias to its title.\n *\n * Aliases which are not in this map will the get title of the component.\n * @property {string | string[]} [optional]\n * @property {string | string[]} [require]\n * @property {string | string[]} [modify]\n */\n\nvar getLoader = (function () {\n\n\t/**\n\t * A function which does absolutely nothing.\n\t *\n\t * @type {any}\n\t */\n\tvar noop = function () { };\n\n\t/**\n\t * Invokes the given callback for all elements of the given value.\n\t *\n\t * If the given value is an array, the callback will be invokes for all elements. If the given value is `null` or\n\t * `undefined`, the callback will not be invoked. In all other cases, the callback will be invoked with the given\n\t * value as parameter.\n\t *\n\t * @param {null | undefined | T | T[]} value\n\t * @param {(value: T, index: number) => void} callbackFn\n\t * @returns {void}\n\t * @template T\n\t */\n\tfunction forEach(value, callbackFn) {\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(callbackFn);\n\t\t} else if (value != null) {\n\t\t\tcallbackFn(value, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new set for the given string array.\n\t *\n\t * @param {string[]} array\n\t * @returns {StringSet}\n\t *\n\t * @typedef {Object<string, true>} StringSet\n\t */\n\tfunction toSet(array) {\n\t\t/** @type {StringSet} */\n\t\tvar set = {};\n\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\tset[array[i]] = true;\n\t\t}\n\t\treturn set;\n\t}\n\n\t/**\n\t * Creates a map of every components id to its entry.\n\t *\n\t * @param {Components} components\n\t * @returns {EntryMap}\n\t *\n\t * @typedef {{ readonly [id: string]: Readonly<ComponentEntry> | undefined }} EntryMap\n\t */\n\tfunction createEntryMap(components) {\n\t\t/** @type {Object<string, Readonly<ComponentEntry>>} */\n\t\tvar map = {};\n\n\t\tfor (var categoryName in components) {\n\t\t\tvar category = components[categoryName];\n\t\t\tfor (var id in category) {\n\t\t\t\tif (id != 'meta') {\n\t\t\t\t\t/** @type {ComponentEntry | string} */\n\t\t\t\t\tvar entry = category[id];\n\t\t\t\t\tmap[id] = typeof entry == 'string' ? { title: entry } : entry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn map;\n\t}\n\n\t/**\n\t * Creates a full dependencies map which includes all types of dependencies and their transitive dependencies.\n\t *\n\t * @param {EntryMap} entryMap\n\t * @returns {DependencyResolver}\n\t *\n\t * @typedef {(id: string) => StringSet} DependencyResolver\n\t */\n\tfunction createDependencyResolver(entryMap) {\n\t\t/** @type {Object<string, StringSet>} */\n\t\tvar map = {};\n\t\tvar _stackArray = [];\n\n\t\t/**\n\t\t * Adds the dependencies of the given component to the dependency map.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {string[]} stack\n\t\t */\n\t\tfunction addToMap(id, stack) {\n\t\t\tif (id in map) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstack.push(id);\n\n\t\t\t// check for circular dependencies\n\t\t\tvar firstIndex = stack.indexOf(id);\n\t\t\tif (firstIndex < stack.length - 1) {\n\t\t\t\tthrow new Error('Circular dependency: ' + stack.slice(firstIndex).join(' -> '));\n\t\t\t}\n\n\t\t\t/** @type {StringSet} */\n\t\t\tvar dependencies = {};\n\n\t\t\tvar entry = entryMap[id];\n\t\t\tif (entry) {\n\t\t\t\t/**\n\t\t\t\t * This will add the direct dependency and all of its transitive dependencies to the set of\n\t\t\t\t * dependencies of `entry`.\n\t\t\t\t *\n\t\t\t\t * @param {string} depId\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tfunction handleDirectDependency(depId) {\n\t\t\t\t\tif (!(depId in entryMap)) {\n\t\t\t\t\t\tthrow new Error(id + ' depends on an unknown component ' + depId);\n\t\t\t\t\t}\n\t\t\t\t\tif (depId in dependencies) {\n\t\t\t\t\t\t// if the given dependency is already in the set of deps, then so are its transitive deps\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\taddToMap(depId, stack);\n\t\t\t\t\tdependencies[depId] = true;\n\t\t\t\t\tfor (var transitiveDepId in map[depId]) {\n\t\t\t\t\t\tdependencies[transitiveDepId] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tforEach(entry.require, handleDirectDependency);\n\t\t\t\tforEach(entry.optional, handleDirectDependency);\n\t\t\t\tforEach(entry.modify, handleDirectDependency);\n\t\t\t}\n\n\t\t\tmap[id] = dependencies;\n\n\t\t\tstack.pop();\n\t\t}\n\n\t\treturn function (id) {\n\t\t\tvar deps = map[id];\n\t\t\tif (!deps) {\n\t\t\t\taddToMap(id, _stackArray);\n\t\t\t\tdeps = map[id];\n\t\t\t}\n\t\t\treturn deps;\n\t\t};\n\t}\n\n\t/**\n\t * Returns a function which resolves the aliases of its given id of alias.\n\t *\n\t * @param {EntryMap} entryMap\n\t * @returns {(idOrAlias: string) => string}\n\t */\n\tfunction createAliasResolver(entryMap) {\n\t\t/** @type {Object<string, string> | undefined} */\n\t\tvar map;\n\n\t\treturn function (idOrAlias) {\n\t\t\tif (idOrAlias in entryMap) {\n\t\t\t\treturn idOrAlias;\n\t\t\t} else {\n\t\t\t\t// only create the alias map if necessary\n\t\t\t\tif (!map) {\n\t\t\t\t\tmap = {};\n\n\t\t\t\t\tfor (var id in entryMap) {\n\t\t\t\t\t\tvar entry = entryMap[id];\n\t\t\t\t\t\tforEach(entry && entry.alias, function (alias) {\n\t\t\t\t\t\t\tif (alias in map) {\n\t\t\t\t\t\t\t\tthrow new Error(alias + ' cannot be alias for both ' + id + ' and ' + map[alias]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (alias in entryMap) {\n\t\t\t\t\t\t\t\tthrow new Error(alias + ' cannot be alias of ' + id + ' because it is a component.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmap[alias] = id;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn map[idOrAlias] || idOrAlias;\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * @typedef LoadChainer\n\t * @property {(before: T, after: () => T) => T} series\n\t * @property {(values: T[]) => T} parallel\n\t * @template T\n\t */\n\n\t/**\n\t * Creates an implicit DAG from the given components and dependencies and call the given `loadComponent` for each\n\t * component in topological order.\n\t *\n\t * @param {DependencyResolver} dependencyResolver\n\t * @param {StringSet} ids\n\t * @param {(id: string) => T} loadComponent\n\t * @param {LoadChainer<T>} [chainer]\n\t * @returns {T}\n\t * @template T\n\t */\n\tfunction loadComponentsInOrder(dependencyResolver, ids, loadComponent, chainer) {\n\t\tvar series = chainer ? chainer.series : undefined;\n\t\tvar parallel = chainer ? chainer.parallel : noop;\n\n\t\t/** @type {Object<string, T>} */\n\t\tvar cache = {};\n\n\t\t/**\n\t\t * A set of ids of nodes which are not depended upon by any other node in the graph.\n\t\t *\n\t\t * @type {StringSet}\n\t\t */\n\t\tvar ends = {};\n\n\t\t/**\n\t\t * Loads the given component and its dependencies or returns the cached value.\n\t\t *\n\t\t * @param {string} id\n\t\t * @returns {T}\n\t\t */\n\t\tfunction handleId(id) {\n\t\t\tif (id in cache) {\n\t\t\t\treturn cache[id];\n\t\t\t}\n\n\t\t\t// assume that it's an end\n\t\t\t// if it isn't, it will be removed later\n\t\t\tends[id] = true;\n\n\t\t\t// all dependencies of the component in the given ids\n\t\t\tvar dependsOn = [];\n\t\t\tfor (var depId in dependencyResolver(id)) {\n\t\t\t\tif (depId in ids) {\n\t\t\t\t\tdependsOn.push(depId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The value to be returned.\n\t\t\t *\n\t\t\t * @type {T}\n\t\t\t */\n\t\t\tvar value;\n\n\t\t\tif (dependsOn.length === 0) {\n\t\t\t\tvalue = loadComponent(id);\n\t\t\t} else {\n\t\t\t\tvar depsValue = parallel(dependsOn.map(function (depId) {\n\t\t\t\t\tvar value = handleId(depId);\n\t\t\t\t\t// none of the dependencies can be ends\n\t\t\t\t\tdelete ends[depId];\n\t\t\t\t\treturn value;\n\t\t\t\t}));\n\t\t\t\tif (series) {\n\t\t\t\t\t// the chainer will be responsibly for calling the function calling loadComponent\n\t\t\t\t\tvalue = series(depsValue, function () { return loadComponent(id); });\n\t\t\t\t} else {\n\t\t\t\t\t// we don't have a chainer, so we call loadComponent ourselves\n\t\t\t\t\tloadComponent(id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// cache and return\n\t\t\treturn cache[id] = value;\n\t\t}\n\n\t\tfor (var id in ids) {\n\t\t\thandleId(id);\n\t\t}\n\n\t\t/** @type {T[]} */\n\t\tvar endValues = [];\n\t\tfor (var endId in ends) {\n\t\t\tendValues.push(cache[endId]);\n\t\t}\n\t\treturn parallel(endValues);\n\t}\n\n\t/**\n\t * Returns whether the given object has any keys.\n\t *\n\t * @param {object} obj\n\t */\n\tfunction hasKeys(obj) {\n\t\tfor (var key in obj) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns an object which provides methods to get the ids of the components which have to be loaded (`getIds`) and\n\t * a way to efficiently load them in synchronously and asynchronous contexts (`load`).\n\t *\n\t * The set of ids to be loaded is a superset of `load`. If some of these ids are in `loaded`, the corresponding\n\t * components will have to reloaded.\n\t *\n\t * The ids in `load` and `loaded` may be in any order and can contain duplicates.\n\t *\n\t * @param {Components} components\n\t * @param {string[]} load\n\t * @param {string[]} [loaded=[]] A list of already loaded components.\n\t *\n\t * If a component is in this list, then all of its requirements will also be assumed to be in the list.\n\t * @returns {Loader}\n\t *\n\t * @typedef Loader\n\t * @property {() => string[]} getIds A function to get all ids of the components to load.\n\t *\n\t * The returned ids will be duplicate-free, alias-free and in load order.\n\t * @property {LoadFunction} load A functional interface to load components.\n\t *\n\t * @typedef {<T> (loadComponent: (id: string) => T, chainer?: LoadChainer<T>) => T} LoadFunction\n\t * A functional interface to load components.\n\t *\n\t * The `loadComponent` function will be called for every component in the order in which they have to be loaded.\n\t *\n\t * The `chainer` is useful for asynchronous loading and its `series` and `parallel` functions can be thought of as\n\t * `Promise#then` and `Promise.all`.\n\t *\n\t * @example\n\t * load(id => { loadComponent(id); }); // returns undefined\n\t *\n\t * await load(\n\t *     id => loadComponentAsync(id), // returns a Promise for each id\n\t *     {\n\t *         series: async (before, after) => {\n\t *             await before;\n\t *             await after();\n\t *         },\n\t *         parallel: async (values) => {\n\t *             await Promise.all(values);\n\t *         }\n\t *     }\n\t * );\n\t */\n\tfunction getLoader(components, load, loaded) {\n\t\tvar entryMap = createEntryMap(components);\n\t\tvar resolveAlias = createAliasResolver(entryMap);\n\n\t\tload = load.map(resolveAlias);\n\t\tloaded = (loaded || []).map(resolveAlias);\n\n\t\tvar loadSet = toSet(load);\n\t\tvar loadedSet = toSet(loaded);\n\n\t\t// add requirements\n\n\t\tload.forEach(addRequirements);\n\t\tfunction addRequirements(id) {\n\t\t\tvar entry = entryMap[id];\n\t\t\tforEach(entry && entry.require, function (reqId) {\n\t\t\t\tif (!(reqId in loadedSet)) {\n\t\t\t\t\tloadSet[reqId] = true;\n\t\t\t\t\taddRequirements(reqId);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// add components to reload\n\n\t\t// A component x in `loaded` has to be reloaded if\n\t\t//  1) a component in `load` modifies x.\n\t\t//  2) x depends on a component in `load`.\n\t\t// The above two condition have to be applied until nothing changes anymore.\n\n\t\tvar dependencyResolver = createDependencyResolver(entryMap);\n\n\t\t/** @type {StringSet} */\n\t\tvar loadAdditions = loadSet;\n\t\t/** @type {StringSet} */\n\t\tvar newIds;\n\t\twhile (hasKeys(loadAdditions)) {\n\t\t\tnewIds = {};\n\n\t\t\t// condition 1)\n\t\t\tfor (var loadId in loadAdditions) {\n\t\t\t\tvar entry = entryMap[loadId];\n\t\t\t\tforEach(entry && entry.modify, function (modId) {\n\t\t\t\t\tif (modId in loadedSet) {\n\t\t\t\t\t\tnewIds[modId] = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// condition 2)\n\t\t\tfor (var loadedId in loadedSet) {\n\t\t\t\tif (!(loadedId in loadSet)) {\n\t\t\t\t\tfor (var depId in dependencyResolver(loadedId)) {\n\t\t\t\t\t\tif (depId in loadSet) {\n\t\t\t\t\t\t\tnewIds[loadedId] = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tloadAdditions = newIds;\n\t\t\tfor (var newId in loadAdditions) {\n\t\t\t\tloadSet[newId] = true;\n\t\t\t}\n\t\t}\n\n\t\t/** @type {Loader} */\n\t\tvar loader = {\n\t\t\tgetIds: function () {\n\t\t\t\tvar ids = [];\n\t\t\t\tloader.load(function (id) {\n\t\t\t\t\tids.push(id);\n\t\t\t\t});\n\t\t\t\treturn ids;\n\t\t\t},\n\t\t\tload: function (loadComponent, chainer) {\n\t\t\t\treturn loadComponentsInOrder(dependencyResolver, loadSet, loadComponent, chainer);\n\t\t\t}\n\t\t};\n\n\t\treturn loader;\n\t}\n\n\treturn getLoader;\n\n}());\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = getLoader;\n}\n","export const components = {\"languages\":{\"markup\":{\"alias\":[\"html\",\"xml\",\"svg\",\"mathml\",\"ssml\",\"atom\",\"rss\"]},\"css\":{},\"clike\":{},\"javascript\":{\"alias\":\"js\",\"require\":\"clike\"},\"abap\":{},\"abnf\":{},\"actionscript\":{\"require\":\"javascript\"},\"ada\":{},\"agda\":{},\"al\":{},\"antlr4\":{\"alias\":\"g4\"},\"apacheconf\":{},\"apex\":{\"require\":[\"clike\",\"sql\"]},\"apl\":{},\"applescript\":{},\"aql\":{},\"arduino\":{\"alias\":\"ino\",\"require\":\"cpp\"},\"arff\":{},\"armasm\":{\"alias\":\"arm-asm\"},\"arturo\":{\"alias\":\"art\"},\"asciidoc\":{\"alias\":\"adoc\"},\"aspnet\":{\"require\":[\"markup\",\"csharp\"]},\"asm6502\":{},\"asmatmel\":{},\"autohotkey\":{},\"autoit\":{},\"avisynth\":{\"alias\":\"avs\"},\"avro-idl\":{\"alias\":\"avdl\"},\"awk\":{\"alias\":\"gawk\"},\"bash\":{\"alias\":[\"sh\",\"shell\"]},\"basic\":{},\"batch\":{},\"bbcode\":{\"alias\":\"shortcode\"},\"bbj\":{},\"bicep\":{},\"birb\":{\"require\":\"clike\"},\"bison\":{\"require\":\"c\"},\"bnf\":{\"alias\":\"rbnf\"},\"bqn\":{},\"brainfuck\":{},\"brightscript\":{},\"bro\":{},\"bsl\":{\"alias\":\"oscript\"},\"c\":{\"require\":\"clike\"},\"csharp\":{\"alias\":[\"cs\",\"dotnet\"],\"require\":\"clike\"},\"cpp\":{\"require\":\"c\"},\"cfscript\":{\"alias\":\"cfc\",\"require\":\"clike\"},\"chaiscript\":{\"require\":[\"clike\",\"cpp\"]},\"cil\":{},\"cilkc\":{\"alias\":\"cilk-c\",\"require\":\"c\"},\"cilkcpp\":{\"alias\":[\"cilk-cpp\",\"cilk\"],\"require\":\"cpp\"},\"clojure\":{},\"cmake\":{},\"cobol\":{},\"coffeescript\":{\"alias\":\"coffee\",\"require\":\"javascript\"},\"concurnas\":{\"alias\":\"conc\"},\"csp\":{},\"cooklang\":{},\"coq\":{},\"crystal\":{\"require\":\"ruby\"},\"css-extras\":{\"require\":\"css\"},\"csv\":{},\"cue\":{},\"cypher\":{},\"d\":{\"require\":\"clike\"},\"dart\":{\"require\":\"clike\"},\"dataweave\":{},\"dax\":{},\"dhall\":{},\"diff\":{},\"django\":{\"alias\":\"jinja2\",\"require\":\"markup-templating\"},\"dns-zone-file\":{\"alias\":\"dns-zone\"},\"docker\":{\"alias\":\"dockerfile\"},\"dot\":{\"alias\":\"gv\"},\"ebnf\":{},\"editorconfig\":{},\"eiffel\":{},\"ejs\":{\"alias\":\"eta\",\"require\":[\"javascript\",\"markup-templating\"]},\"elixir\":{},\"elm\":{},\"etlua\":{\"require\":[\"lua\",\"markup-templating\"]},\"erb\":{\"require\":[\"ruby\",\"markup-templating\"]},\"erlang\":{},\"excel-formula\":{\"alias\":[\"xlsx\",\"xls\"]},\"fsharp\":{\"require\":\"clike\"},\"factor\":{},\"false\":{},\"firestore-security-rules\":{\"require\":\"clike\"},\"flow\":{\"require\":\"javascript\"},\"fortran\":{},\"ftl\":{\"require\":\"markup-templating\"},\"gml\":{\"alias\":\"gamemakerlanguage\",\"require\":\"clike\"},\"gap\":{},\"gcode\":{},\"gdscript\":{},\"gedcom\":{},\"gettext\":{\"alias\":\"po\"},\"gherkin\":{},\"git\":{},\"glsl\":{\"require\":\"c\"},\"gn\":{\"alias\":\"gni\"},\"linker-script\":{\"alias\":\"ld\"},\"go\":{\"require\":\"clike\"},\"go-module\":{\"alias\":\"go-mod\"},\"gradle\":{\"require\":\"clike\"},\"graphql\":{},\"groovy\":{\"require\":\"clike\"},\"haml\":{\"require\":\"ruby\"},\"handlebars\":{\"alias\":[\"hbs\",\"mustache\"],\"require\":\"markup-templating\"},\"haskell\":{\"alias\":\"hs\"},\"haxe\":{\"require\":\"clike\"},\"hcl\":{},\"hlsl\":{\"require\":\"c\"},\"hoon\":{},\"http\":{},\"hpkp\":{},\"hsts\":{},\"ichigojam\":{},\"icon\":{},\"icu-message-format\":{},\"idris\":{\"alias\":\"idr\",\"require\":\"haskell\"},\"ignore\":{\"alias\":[\"gitignore\",\"hgignore\",\"npmignore\"]},\"inform7\":{},\"ini\":{},\"io\":{},\"j\":{},\"java\":{\"require\":\"clike\"},\"javadoc\":{\"require\":[\"markup\",\"java\",\"javadoclike\"]},\"javadoclike\":{},\"javastacktrace\":{},\"jexl\":{},\"jolie\":{\"require\":\"clike\"},\"jq\":{},\"jsdoc\":{\"require\":[\"javascript\",\"javadoclike\",\"typescript\"]},\"js-extras\":{\"require\":\"javascript\"},\"json\":{\"alias\":\"webmanifest\"},\"json5\":{\"require\":\"json\"},\"jsonp\":{\"require\":\"json\"},\"jsstacktrace\":{},\"js-templates\":{\"require\":\"javascript\"},\"julia\":{},\"keepalived\":{},\"keyman\":{},\"kotlin\":{\"alias\":[\"kt\",\"kts\"],\"require\":\"clike\"},\"kumir\":{\"alias\":\"kum\"},\"kusto\":{},\"latex\":{\"alias\":[\"tex\",\"context\"]},\"latte\":{\"require\":[\"clike\",\"markup-templating\",\"php\"]},\"less\":{\"require\":\"css\"},\"lilypond\":{\"alias\":\"ly\",\"require\":\"scheme\"},\"liquid\":{\"require\":\"markup-templating\"},\"lisp\":{\"alias\":[\"emacs\",\"elisp\",\"emacs-lisp\"]},\"livescript\":{},\"llvm\":{},\"log\":{},\"lolcode\":{},\"lua\":{},\"magma\":{},\"makefile\":{},\"markdown\":{\"alias\":\"md\",\"require\":\"markup\"},\"markup-templating\":{\"require\":\"markup\"},\"mata\":{},\"matlab\":{},\"maxscript\":{},\"mel\":{},\"mermaid\":{},\"metafont\":{},\"mizar\":{},\"mongodb\":{\"require\":\"javascript\"},\"monkey\":{},\"moonscript\":{\"alias\":\"moon\"},\"n1ql\":{},\"n4js\":{\"alias\":\"n4jsd\",\"require\":\"javascript\"},\"nand2tetris-hdl\":{},\"naniscript\":{\"alias\":\"nani\"},\"nasm\":{},\"neon\":{},\"nevod\":{},\"nginx\":{},\"nim\":{},\"nix\":{},\"nsis\":{},\"objectivec\":{\"alias\":\"objc\",\"require\":\"c\"},\"ocaml\":{},\"odin\":{},\"opencl\":{\"require\":\"c\"},\"openqasm\":{\"alias\":\"qasm\"},\"oz\":{},\"parigp\":{},\"parser\":{\"require\":\"markup\"},\"pascal\":{\"alias\":\"objectpascal\"},\"pascaligo\":{},\"psl\":{},\"pcaxis\":{\"alias\":\"px\"},\"peoplecode\":{\"alias\":\"pcode\"},\"perl\":{},\"php\":{\"require\":\"markup-templating\"},\"phpdoc\":{\"require\":[\"php\",\"javadoclike\"]},\"php-extras\":{\"require\":\"php\"},\"plant-uml\":{\"alias\":\"plantuml\"},\"plsql\":{\"require\":\"sql\"},\"powerquery\":{\"alias\":[\"pq\",\"mscript\"]},\"powershell\":{},\"processing\":{\"require\":\"clike\"},\"prolog\":{},\"promql\":{},\"properties\":{},\"protobuf\":{\"require\":\"clike\"},\"pug\":{\"require\":[\"markup\",\"javascript\"]},\"puppet\":{},\"pure\":{},\"purebasic\":{\"alias\":\"pbfasm\",\"require\":\"clike\"},\"purescript\":{\"alias\":\"purs\",\"require\":\"haskell\"},\"python\":{\"alias\":\"py\"},\"qsharp\":{\"alias\":\"qs\",\"require\":\"clike\"},\"q\":{},\"qml\":{\"require\":\"javascript\"},\"qore\":{\"require\":\"clike\"},\"r\":{},\"racket\":{\"alias\":\"rkt\",\"require\":\"scheme\"},\"cshtml\":{\"alias\":\"razor\",\"require\":[\"markup\",\"csharp\"]},\"jsx\":{\"require\":[\"markup\",\"javascript\"]},\"tsx\":{\"require\":[\"jsx\",\"typescript\"]},\"reason\":{\"require\":\"clike\"},\"regex\":{},\"rego\":{},\"renpy\":{\"alias\":\"rpy\"},\"rescript\":{\"alias\":\"res\"},\"rest\":{},\"rip\":{},\"roboconf\":{},\"robotframework\":{\"alias\":\"robot\"},\"ruby\":{\"alias\":\"rb\",\"require\":\"clike\"},\"rust\":{},\"sas\":{},\"sass\":{\"require\":\"css\"},\"scss\":{\"require\":\"css\"},\"scala\":{\"require\":\"java\"},\"scheme\":{},\"shell-session\":{\"alias\":[\"sh-session\",\"shellsession\"],\"require\":\"bash\"},\"smali\":{},\"smalltalk\":{},\"smarty\":{\"require\":\"markup-templating\"},\"sml\":{\"alias\":\"smlnj\"},\"solidity\":{\"alias\":\"sol\",\"require\":\"clike\"},\"solution-file\":{\"alias\":\"sln\"},\"soy\":{\"require\":\"markup-templating\"},\"sparql\":{\"alias\":\"rq\",\"require\":\"turtle\"},\"splunk-spl\":{},\"sqf\":{\"require\":\"clike\"},\"sql\":{},\"squirrel\":{\"require\":\"clike\"},\"stan\":{},\"stata\":{\"require\":[\"mata\",\"java\",\"python\"]},\"iecst\":{},\"stylus\":{},\"supercollider\":{\"alias\":\"sclang\"},\"swift\":{},\"systemd\":{},\"t4-templating\":{},\"t4-cs\":{\"alias\":\"t4\",\"require\":[\"t4-templating\",\"csharp\"]},\"t4-vb\":{\"require\":[\"t4-templating\",\"vbnet\"]},\"tap\":{\"require\":\"yaml\"},\"tcl\":{},\"tt2\":{\"require\":[\"clike\",\"markup-templating\"]},\"textile\":{\"require\":\"markup\"},\"toml\":{},\"tremor\":{\"alias\":[\"trickle\",\"troy\"]},\"turtle\":{\"alias\":\"trig\"},\"twig\":{\"require\":\"markup-templating\"},\"typescript\":{\"alias\":\"ts\",\"require\":\"javascript\"},\"typoscript\":{\"alias\":\"tsconfig\"},\"unrealscript\":{\"alias\":[\"uscript\",\"uc\"]},\"uorazor\":{},\"uri\":{\"alias\":\"url\"},\"v\":{\"require\":\"clike\"},\"vala\":{\"require\":\"clike\"},\"vbnet\":{\"require\":\"basic\"},\"velocity\":{\"require\":\"markup\"},\"verilog\":{},\"vhdl\":{},\"vim\":{},\"visual-basic\":{\"alias\":[\"vb\",\"vba\"]},\"warpscript\":{},\"wasm\":{},\"web-idl\":{\"alias\":\"webidl\"},\"wgsl\":{},\"wiki\":{\"require\":\"markup\"},\"wolfram\":{\"alias\":[\"mathematica\",\"nb\",\"wl\"]},\"wren\":{},\"xeora\":{\"alias\":\"xeoracube\",\"require\":\"markup\"},\"xml-doc\":{\"require\":\"markup\"},\"xojo\":{},\"xquery\":{\"require\":\"markup\"},\"yaml\":{\"alias\":\"yml\"},\"yang\":{},\"zig\":{}}};","// set prism to manual mode\nif (typeof window !== \"undefined\") {\n  window.Prism = window.Prism || {};\n  Prism.manual = true;\n}\n\nimport { tick } from \"svelte\";\nimport Prism from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-markup\";\nimport getLoader from \"prismjs/dependencies\";\nimport { components } from \"./components\";\n\nexport const defaults = {\n  root: null,\n  rootMargin: \"100px\",\n  threshold: 0,\n  componentsUrl: \"https://unpkg.com/prismjs@1.22.0/components\",\n  componentsUrls: {},\n};\n\n/**\n * Svelte action for lazy render code blocks with prism.js.\n *\n * @param {DOMELement} node\n * @param {object} params\n * @param {DOMElement} params.root = null\n * @param {string} params.rootMargin = \"100px\"\n * @param {number} params.threshold = 0\n * @param {string} params.componentsUrl = \"https://unpkg.com/prismjs@1.22.0/components\"\n */\nexport function prism(node, params) {\n  //merge params with defaults\n  const options = {\n    ...defaults,\n    ...params,\n  };\n\n  /**\n   * Lazy loads prism.js language component and highlights target.\n   * Classname needs to be set to 'language-[lang]' (eg. 'language-javascript')\n   *\n   * @param {DOMElement} target\n   * @param {string} componentsUrl  URL to prism.js component folder.\n   */\n  const highlightCode = async function (target) {\n    if (!target.dataset.isHighlighted) {\n      const ids = getLanguagesFromClass(target);\n\n      if (ids.length > 0) {\n        try {\n          await loadLanguageAsync(ids);\n          Prism.highlightElement(target);\n          target.dataset.isHighlighted = true;\n        } catch (error) {\n          console.warn(error);\n        }\n      }\n    }\n  };\n\n  /**\n   * Returns prism.js language name from class name. (eg. 'language-javascript')\n   * Also includes languages from inside markdown code.\n   *\n   * @param {DOMElement} item\n   * @returns {[string]}  Returns language names.\n   */\n  function getLanguagesFromClass(item) {\n    let languages = [];\n    const matches = item.className.match(/[lang|language]-(\\w+)/);\n    const language = matches ? matches[1] : false; //eg. class=\"language-css\" => css\n\n    if (language) {\n      languages.push(language);\n    }\n\n    if (language === \"markdown\") {\n      //get languages used inside markdown code blocks\n      let additional = item.innerHTML.match(/(```)(\\w+)/gm);\n      additional = additional\n        ? additional.map((item) => item.replace(\"```\", \"\"))\n        : [];\n      languages = [...languages, ...additional];\n    }\n\n    return languages;\n  }\n\n  /**\n   * Async load prism.js language files.\n   *\n   * @param {[string]} language ids\n   * @returns {Promise}\n   */\n  function loadLanguageAsync(ids) {\n    const loader = getLoader(components, ids);\n    const promise = loader.load(\n      (id) => {\n        if (!Object.keys(window.Prism.languages).includes(id)) {\n          let url = \"\";\n          if (Object.keys(options.componentsUrls).includes(id)) {\n            url = options.componentsUrls[id];\n          } else {\n            url = `${options.componentsUrl}/prism-${id}.min.js`;\n          }\n\n          return import(/* @vite-ignore */ `${url}`).catch((error) => {\n            console.warn(error);\n          });\n        }\n      },\n      {\n        series: async (before, after) => {\n          await before;\n          await after();\n        },\n        parallel: async (values) => {\n          await Promise.all(values);\n        },\n      }\n    );\n\n    return promise;\n  }\n\n  /**\n   * Callback for IntersectionObserver.\n   *\n   * @param {Array.<Event>]} events\n   */\n  function onIntersect(events) {\n    events.forEach((e) => {\n      if (e.isIntersecting) {\n        highlightCode(e.target);\n      }\n    });\n  }\n\n  //wait for onMount on parent\n  let observer;\n\n  tick().then(() => {\n    //add observer to code blocks\n    const codeblocks = node.querySelectorAll(\"code\");\n    observer = new IntersectionObserver(onIntersect, { ...options });\n\n    [...codeblocks].forEach((codeblock) => {\n      observer.observe(codeblock);\n    });\n  });\n\n  return {\n    destroy() {\n      observer.disconnect();\n    },\n  };\n}\n","<script>\n  import {prism} from './../actions/svelte-prism-action';\n</script>\n\n<main use:prism={{componentsUrls: {svelte: \"https://cdn.jsdelivr.net/npm/prism-svelte@0.5.0/index.js\"}}}>\n\n  <h1>svelte-prism-action</h1>\n  <p><a href=\"https://svelte.dev\">Svelte</a> action for lazy loading <a href=\"https://prismjs.com\">Prism.js</a> code highlighting.</p>\n\n  <p><a href=\"https://github.com/thurti/svelte-prism-action\">Code on GitHub</a></p>\n\n  <h2>Install</h2>\n\n  <code id=\"test_inline\" class=\"lang-bash\">$ npm install svelte-prism-action</code>\n\n  <p>\n    Include a Prism.js CSS theme in your svelte component or use the <code lang=\"html\">&lt;head&gt;</code> section of your <code class=\"lang-html\">index.html</code>.\n  </p>\n  <pre><code id=\"test_block\" class=\"lang-html\">{`<link href=\"https://unpkg.com/prismjs@1.22.0/themes/prism.css\" rel=\"stylesheet\" />`}</code></pre>\n\n  <h2>Usage</h2>\n\n  <p>Import prism from svelte-prism-action. Add the action to a component with <code class=\"lang-html\">use:prism</code>. All <code class=\"lang-html\">&lt;code&gt;</code> elements with a <code class=\"lang-html\">class=\"language-...\"</code> will get highlighted once they have entered the viewport.</p>\n\n  <p>For available language tags see <a href=\"https://prismjs.com/#supported-languages\">https://prismjs.com/#supported-languages</a> .</p>\n\n  <p><b>HINT</b> If you are writing your codeblocks directly into a svelte component you need to <b>escape special characters</b> (eg. curley brackets). Another way is to wrap the code inside <code>{`\\{\\`\\`\\}`}</code>.</p>\n\n  <pre><code id=\"test_svelte\" class=\"lang-svelte\">{`\n<script>\n  import {prism} from \"svelte-prism-action\";\n</script>\n\n<!-- add action to component -->\n<main use:prism>\n\n<!-- or set some options\n  <main use:prism={{\n    componentsUrl: \"https://myPathToPrism/components\"\n  }}>\n-->\n\n  <p>\n    Use in code blocks.\n  </p>\n\n  <pre>\n    <code class=\"lang-css\"> <!-- wrap inside \\{\\`\\`\\} if using inside svelte component-->\n      \\{\\`.bg-gold{\n        background: gold;\n      }\\`\\}\n    </code>\n  </pre>\n  \n  <p>\n    Or use inline.\n  </p>\n\n  <code class=\"lang-javascript\">\\{\\`import {prism} from \"svelte-prism-action\";\\`\\}</code>\n\n</main>\n  `}\n  </code></pre>\n\n  <h2>Options</h2>\n  <p>You can use <code class=\"lang-js\">componentsUrl</code> to set the URL from where to import the Prism.js language files. By default it uses <a href=\"https://unpkg.com/\">unpkg cdn</a>, but you can use a local resource instead.</p>\n\n  <p>To lazy load <b>third party language</b> files (eg. <code  class=\"lang-js\">prism-svelte</code>) or define a different file per language you can use <code  class=\"lang-js\">componentsUrls</code> object with language id as key and the URL as the value.</p>\n\n  <p>You can also change the IntersectionObserver options. For more information on what they do see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Interfaces\">https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Interfaces</a> .</p>\n\n  <pre>\n    <code class=\"lang-javascript\">\n{`<main use:prism={{\n  root: null,\n  rootMargin: \"100px\",\n  threshold: 0,\n  componentsUrl: \"https://unpkg.com/prismjs@1.22.0/components\",\n  componentsUrls: {\n    svelte: \"https://cdn.jsdelivr.net/npm/prism-svelte@0.5.0/index.js\"\n  }\n}}> \n...\n</main>`}\n    </code>\n  </pre>\n\n  <h2>Lazy Loading</h2>\n  <p>\n    The language files get lazy loaded. So you don't have to worry which files to include in your project. By default <a href=\"https://unpkg.com\">unpkg CDN</a> is used. But you can set this to whatever you like with the `componentsUrl` option.\n  </p>\n  <p>Please scroll down to test lazy loading.</p>\n  <div style=\"height:1000px\">&nbsp;</div>\n\n  <pre>\n    <code id=\"test_markdown\" class=\"lang-markdown\">\n{`\n# Hi\nThis is my super cool markdown file. I'm just an example. \nBut I really like to tell you something about myself.\n\nThat's fancy, huh?\n\n\\`\\`\\`js\n  console.log(\"I can write code inside code.\");\n\\`\\`\\`\n\n\n\\`\\`\\`css\n  #test{\n    background: green;\n  }\n\\`\\`\\`\n`}\n    </code>\n  </pre>\n</main>","<script>\n  import Page from './components/Page.svelte';\n\n  let open = true;\n</script>\n\n<!-- <button on:click={() => open=!open}>For Testing Memory Leaks</button> -->\n\n{#if open}\n  <Page /> \n{/if}\n\n<style>\n  :global(body){\n    max-width: 55rem;\n    margin: 0 auto;\n  }\n\n  :global(pre){\n    max-width: 100%;\n    overflow-x: scroll;\n  }\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","push","seen_callbacks","Set","flushidx","saved_component","length","update","$$","e","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","Prism","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","content","alias","isArray","replace","prototype","toString","call","slice","objId","defineProperty","clone","deepClone","visited","id","key","hasOwnProperty","v","getLanguage","exec","className","toLowerCase","parentElement","setLanguage","language","RegExp","classList","currentScript","Error","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","languages","plain","plaintext","txt","extend","redef","inside","before","grammar","token","newToken","old","DFS","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","elements","apply","querySelectorAll","highlightElement","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","next","tail","toArray","all","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","match","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","source","currentNode","reach","str","removeCount","to","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","markup","comment","prolog","doctype","string","punctuation","cdata","namespace","entity","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","getLoader","callbackFn","toSet","set","createDependencyResolver","entryMap","_stackArray","addToMap","firstIndex","dependencies","entry","handleDirectDependency","depId","transitiveDepId","require","optional","modify","deps","hasKeys","components","load","loaded","categoryName","category","title","createEntryMap","resolveAlias","idOrAlias","createAliasResolver","loadSet","loadedSet","addRequirements","reqId","newIds","dependencyResolver","loadAdditions","loadId","modId","loadedId","newId","loader","getIds","ids","loadComponent","chainer","series","undefined","parallel","cache","ends","handleId","dependsOn","depsValue","endValues","endId","loadComponentsInOrder","css","clike","javascript","abap","abnf","actionscript","ada","agda","al","antlr4","apacheconf","apex","apl","applescript","aql","arduino","arff","armasm","arturo","asciidoc","aspnet","asm6502","asmatmel","autohotkey","autoit","avisynth","awk","bash","basic","batch","bbcode","bbj","bicep","birb","bison","bnf","bqn","brainfuck","brightscript","bro","bsl","csharp","cpp","cfscript","chaiscript","cil","cilkc","cilkcpp","clojure","cmake","cobol","coffeescript","concurnas","csp","cooklang","coq","crystal","csv","cue","cypher","dart","dataweave","dax","dhall","diff","django","docker","dot","ebnf","editorconfig","eiffel","ejs","elixir","elm","etlua","erb","erlang","fsharp","factor","false","flow","fortran","ftl","gml","gap","gcode","gdscript","gedcom","gettext","gherkin","git","glsl","gn","go","gradle","graphql","groovy","haml","handlebars","haskell","haxe","hcl","hlsl","hoon","http","hpkp","hsts","ichigojam","icon","idris","ignore","inform7","ini","io","java","javadoc","javadoclike","javastacktrace","jexl","jolie","jq","jsdoc","json","json5","jsonp","jsstacktrace","julia","keepalived","keyman","kotlin","kumir","kusto","latex","latte","less","lilypond","liquid","lisp","livescript","llvm","log","lolcode","lua","magma","makefile","markdown","mata","matlab","maxscript","mel","mermaid","metafont","mizar","mongodb","monkey","moonscript","n1ql","n4js","naniscript","nasm","neon","nevod","nginx","nim","nix","nsis","objectivec","ocaml","odin","opencl","openqasm","oz","parigp","parser","pascal","pascaligo","psl","pcaxis","peoplecode","perl","php","phpdoc","plsql","powerquery","powershell","processing","promql","properties","protobuf","pug","puppet","pure","purebasic","purescript","python","qsharp","q","qml","qore","r","racket","cshtml","jsx","tsx","reason","regex","rego","renpy","rescript","rip","roboconf","robotframework","ruby","rust","sas","sass","scss","scala","scheme","smali","smalltalk","smarty","sml","solidity","soy","sparql","sqf","sql","squirrel","stan","stata","iecst","stylus","supercollider","swift","systemd","tap","tcl","tt2","textile","toml","tremor","turtle","twig","typescript","typoscript","unrealscript","uorazor","uri","vala","vbnet","velocity","verilog","vhdl","vim","warpscript","wasm","wgsl","wiki","wolfram","wren","xeora","xojo","xquery","yaml","yang","zig","defaults","rootMargin","threshold","componentsUrl","componentsUrls","prism","params","highlightCode","dataset","isHighlighted","item","matches","additional","getLanguagesFromClass","includes","url","import","catch","error","console","warn","values","loadLanguageAsync","onIntersect","events","isIntersecting","observer","codeblocks","IntersectionObserver","codeblock","observe","destroy","disconnect","important","style","removeProperty","setProperty","action_result","main","h1","p0","p1","h20","code0","p2","pre0","code3","h21","p3","p4","p5","b0","b1","code7","pre1","code8","h22","p6","p7","p8","pre2","code12","h23","p9","p10","div","pre3","code13","svelte","create_if_block","body"],"mappings":"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"}